start: statement+

statement: var_decl
         | const_decl
         | assignment
         | io_stmt
         | ";"

//-------------------------
// Declarations & Assignment
//-------------------------        

var_decl: "DECLARE" IDENT ":" TYPE                -> var_decl
const_decl: "CONSTANT" IDENT  "=" literal           -> const_decl
assignment: IDENT ("←" | "<-") expr                -> assign

//-------------------------   
// Expressions – operator precedence (lowest → highest)
//-------------------------   

?expr       : or_expr

?or_expr    : or_expr "OR" and_expr             -> or_op
            | and_expr

?and_expr   : and_expr "AND" not_expr           -> and_op
            | not_expr

?not_expr   : "NOT" not_expr                    -> not_op
            | compare_expr

?compare_expr: arith_expr comp_op arith_expr -> compare
            | arith_expr

comp_op     : ">"  | "<" | ">=" | "<=" | "=" | "<>" 

?arith_expr : arith_expr "+" term              -> add
            | arith_expr "-" term              -> sub
            | term

?term       : term "*" factor                  -> mul
            | term "/" factor                  -> div
            | term "DIV" factor                -> int_div
            | term "MOD" factor                -> mod
            | factor

?factor     : "-" factor                       -> neg
            | atom

?atom       : literal
            | IDENT
            | "(" expr ")"


//-------------------------
// Statements
//-------------------------

io_stmt : input_stmt
        | output_stmt

input_stmt : "INPUT" IDENT -> input
output_stmt : "OUTPUT" output_list -> output

output_list : expr ("," expr)*


//-------------------------
// Terminals
//-------------------------

literal: INT_LITERAL
       | REAL_LITERAL
       | CHAR_LITERAL
       | STRING_LITERAL
       | BOOL_LITERAL
       | DATE_LITERAL

TYPE: "INTEGER"|"REAL"|"STRING"|"BOOLEAN"|"CHAR"|"DATE"

IDENT: /[A-Za-z][A-Za-z0-9_]*/i

INT_LITERAL: /-?\d+/
REAL_LITERAL: /-?\d+\.\d+/
CHAR_LITERAL: /'[^\\\n]'/
STRING_LITERAL: /"([^"\\]|\\.)*"/
BOOL_LITERAL: "TRUE" | "FALSE"
DATE_LITERAL: /\d{2}\/\d{2}\/\d{4}/

COMMENT: /\/\/[^\n]*/

%import common.NUMBER
%import common.WS
%ignore WS
%ignore COMMENT
